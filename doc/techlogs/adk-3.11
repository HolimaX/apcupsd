             Technical notes on version 3.11.12
                        Adam Kropelin

General:

24Sep05:
- Update examples/snoopdecode.c to latest version and add to Makefile.
- Add SmartUPS serial protocol simulator 'smartsim' to examples/ directory.
- Do not clear_onbatt_msg() when shutting down. This just causes a redundant
  "On Battery" event.
- apcsmart: Convert do/while loop to a regular while loop in UPSlinkCheck().
  The do/while form is harder to read and doesn't add any value.
- apcsmart: Remove pointless check in apcsmart_ups_get_capabilities().
- apcsmart: Fix commlost deadlock caused when locking was added to NIS code.
  We have to drop the UPS lock in UPSlinkCheck(), otherwise NIS is blocked 
  until the link comes back up. Also fix timing bug which caused commlost 
  events every 20 seconds instead of every 10 minutes. To do that, rewrite
  the event loop to not depend on the timing behavior of getline().
- Fix TV_DIFF_MS macro.
- apcsmart: Fix excessive startup delay: Don't probe for commands where
  ups->UPS_Cmd[i] == 0.
18Sep05:
- Be careful not to close trace_fd while daemonizing.
- Add example {on,off}battery scripts that scale CPU frequency down to save
  power when UPS is running on battery. Requires linux-2.6.x kernel with
  cpufreq support and compatible CPU. Inspired by Paul Devriendt's talk
  at OLS 2004.
17Sep05:
- Use fast polling when battery is disconnected. This minimizes the battery
  reattach delay.
- Process actions immediately after volatile poll in addition to after a
  state check. This allows transitions caught by polling to be acted upon
  without waiting thru another state check interval.
- Remove debounce logic. The USB debounce code was vestigial since the big
  USB changes went in.  The SmartUPS code actually interfered with proper
  operation of ONBATTERYDELAY, causing powerfail and onbattery messages to be
  generated ~2 seconds apart instead of whatever the user configured via
  ONBATTERYDELAY.
- USB: Fix selftest detection on RS 1500 models. Delay slightly before reading
  APCLineFailCause because this usage apparently is not valid immediately
  after power failure. Also disable CI_ACPresent when CI_Discharging is
  available because the RS 1500 reports (Discharging=1 && ACPresent=1) during
  self test, which confuses Apcupsd.
15Sep05:
- USB: Work around spurious BatteryPresent=1 bug in RS 1500 firmware.
13Sep05:
- manpage: Default STATUSPORT is 3551. Manually editing cgi is no 
  longer required when changing the port.
7Sep05:
- Fix set_online(int) modifier to change both UPS_online and UPS_onbatt
  like the regular set_online(void) does. Eliminate future ocurrences
  of this bug by writing all set_foo(int) modifiers in terms of 
  set_foo(void) and clear_foo(void).
- Reorder device loop contents so do_action() is invoked early to handle
  preexisting conditions instead of waiting thru a device_check_state()
  period first. The overall order of operations is unchanged; only the
  loop entrypoint has shifted.
- Add BATTDETACH and BATTATTACH events which are triggered by changes in
  the UPS_battpresent flag.
- USB: Fix the battlow FIXME by performing status bit updates the way
  the USB driver used to, namely by clearing the APC part of the status
  word and then setting bits based on CIs. Note that this technique 
  requires a locking change in apcstatus.c to solve the NIS race 
  condition seen with the old USB code.
- NIS: Lock the UPS structure for reading in output_status(). Otherwise
  a client can get corrupt NIS data if the driver is in the middle of 
  updating a field. This is particularly troublesome for the net driver.
6Sep05:
- USB: Update APCLineFailCause interpretation in USB driver with info
  from APC.
- Add XFER_FREQ to represent transfers due to input frequency out of
  range.
- Remove individual UPS_prev_onbatt and UPS_prev_battlow bits in favor
  of a generic status bit change detection mechanism.
3Sep05:
- CGI: Teach multimon about NOBATT and make buffer length tracking in
  parsefield() less prone to errors in the future.
- USB: Make volatile data debug output consistent.
- USB: Set status bits directly from USB data so UPSINFO follows the
  hw state.
2Sep05:
- CGI: Fix a few instances of "sizeof(pointer)" caught by g++ on OpenBSD.
1Sep05
- SNMP: UPSINFO::G[] and UPSINFO::X[] to enum conversion.
- CGI: Fix C++ compilation.
- Kill unused (or nearly unused) fields from class UPSINFO. Also remove
  unused structs while we're in the neighborhood.
31Aug05
- USB: Make older gcc happy by not introducing a local variable in
  the middle of a switch statement.
- USB: My RS 1500 models seem to return APCLineFailCause=8 for
  transitions due to utility power failure. Update return value
  decoding to account for this.
- hid-ups: Name usage 0xFF860052 as APCLineFailCause.
- Convert UPSINFO::G[] to LastXferCause enumeration and eliminate
  the need for core code to know about last xfer CIs.
- Kill off UPSINFO::X[], replacing it with enum SelfTestResult.
- Add support for tracking battery presence via new NOBATT status
  flag.
30Aug05
- Rephrase comm{ok,failure} messages to not assume a serial port
  connection.
- USB: Add CI_APCLineFailStatus support. This allows apcupsd to
  distinguish battery transitions due to self test from those 
  due to utility power failure.
- Increase self test grace period to 20 seconds (from 12) to
  accomodate lengthy USB event hysteresis imposed by the UPS.
- USB: Set self test result string.
- USB: Fix excessive unlocking bug in pusb_ups_check_state().
- NET: Fix minor copy-n-paste error in net_ups_read_volatile_data.
23Aug05
- USB: Use CI_RETPCT instead of CI_APCDelayBeforeStartup which is not
  only cleaner but also causes RETPCT to be properly reported.
18Aug05
- Fix powerflute SIGALRM timer on Solaris by reinstalling signal
  handler whenever the timer expires.
15Aug05
- Increase inter-URB delay to 20 msec as per 3.10.18.
- Fix powerflute compilation on Solaris by preferring
  ncurses/*.h headers over include/*.h when both
  exist.
- C++ fixes for compilation on Solaris.
- BSD and Linux USB rework to report events via callback.
08Jul05
- Bump version number and date
- Back-port inter-URB delay lockup fix from Branch-3_10_17
- Significantly rework USB driver event and poll handling.
  More cleanup to come, and BSD driver still needs update.
22Jun05
- bsd-usb: compile fix
- linux-usb: Filter duplicate reports in pusb_ups_check_state().
- linux-usb: Strengthen CI <-> usage association 
- linux-usb: Only exit event read() loop when an 'important' CI
  is processed
- Add a parameterized version of set_battlow() and make use of it.
- linux-usb: Add some more 'important'-looking events
08Jun05
- Retroactively create my own techlog
07Jun05
- Rename mainsback.in to offbattery.in so default power loss/return
  actions are symmetrical.
- Fix bsd-usb build on FreeBSD-4.11 by allowing Makefiles to add 
  their own include flags via EXTRAINCS.
- Exclude HPUX from signal recursion
31May05
- Code style normalization.
19May05
- C++ cleanliness fixes in libusbhid
27Apr05
- Merge hidu_set_report bug fix from Branch-3_10_17.
24Apr05
- Make apctest work with empty DEVICE setting for USB driver.
22Apr05
- Merge BSD UHCI lockup fixes from Branch-3_10_17.
04Apr05
- Remove trailing commas in enum declarations to make AIX 5.1 +
  VACPP 6.0 happy.
29Mar05
- Make SNMP missing SNMP libs cause ./configure fail
- Remove references to serial port in comms lost/restored messages
  in apccontrol.in since in UPSes may be connected by other means
  (USB, net, etc.).
- More unsafe string conversions. strcpy -> astrncpy and
  sprintf -> asnprintf.
22Mar05
- Convert some potentially unsafe string functions to apcupsd safe
  versions. None of the usages were actually unsafe, but this change
  pacifies OpenBSD and prevents future bugs.
